{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNKnDkGzGEsYpczGOBzXFQf"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Assign Date Ranges to Sign Instances\n","\n","This notebook takes the data for a single sign and matches the listed date epochs to the (approximate) dates given in the Epochen.csv data file.\n","Doing this allows for calculation of the relative proportion of signs at different times and the estimation of parameters for the growth curve."],"metadata":{"id":"FM-BGEJHjRDp"}},{"cell_type":"markdown","source":["## Load Date File\n","\n","The CSV \"Epochen.csv\" contains approximate dates for all available Epochs in the AKU-PAL dataset (as of 2024-12-19).\n","These data will be used to assign dates to sign instances."],"metadata":{"id":"zyaePEHwkyyR"}},{"cell_type":"code","source":["import pandas as pd\n","\n","try:\n","  df_dates = pd.read_csv('https://raw.githubusercontent.com/Writing-Through-Time/Evolution/refs/heads/main/data/aku_pal/Epochen.csv')\n","  print(f\"Date data loaded successfully.\")\n","  display(df_dates)\n","\n","except Exception as e:\n","  print(f\"An error occurred: {e}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":476},"id":"AFF0FtFllA9z","executionInfo":{"status":"ok","timestamp":1734620625067,"user_tz":-60,"elapsed":1737,"user":{"displayName":"Christian Casey","userId":"11169040297014525246"}},"outputId":"e816b50c-dc65-4aa6-cdab-9ce0730855e3"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Date data loaded successfully.\n"]},{"output_type":"display_data","data":{"text/plain":["    Centroid                 Epoch  Start Date  End Date         Source  \\\n","0    -2783.0           2. Dynastie       -2880     -2686     Pharaoh.se   \n","1    -2502.5           4. Dynastie       -2613     -2392     Pharaoh.se   \n","2    -2434.0           Altes Reich       -2687     -2181     Pharaoh.se   \n","3    -2419.5           5. Dynastie       -2494     -2345     Pharaoh.se   \n","4    -2410.0  Kakai Neferirkare I.       -2415     -2405  AE Chronology   \n","..       ...                   ...         ...       ...            ...   \n","88      47.5              Claudius          41        54     Pharaoh.se   \n","89      61.0                  Nero          54        68     Pharaoh.se   \n","90     107.5                Trajan          98       117     Pharaoh.se   \n","91     127.5               Hadrian         117       138     Pharaoh.se   \n","92     149.5        Antoninus Pius         138       161     Pharaoh.se   \n","\n","                                              Comment  \n","0                                                 NaN  \n","1                                                 NaN  \n","2                                                 NaN  \n","3                                                 NaN  \n","4   AE Chronology dates seem to correlate best wit...  \n","..                                                ...  \n","88              All sources cited by Pharaoh.se agree  \n","89              All sources cited by Pharaoh.se agree  \n","90              All sources cited by Pharaoh.se agree  \n","91              All sources cited by Pharaoh.se agree  \n","92              All sources cited by Pharaoh.se agree  \n","\n","[93 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-3eb6b3f7-884d-4cd5-aa3e-aeb7700b9b10\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Centroid</th>\n","      <th>Epoch</th>\n","      <th>Start Date</th>\n","      <th>End Date</th>\n","      <th>Source</th>\n","      <th>Comment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-2783.0</td>\n","      <td>2. Dynastie</td>\n","      <td>-2880</td>\n","      <td>-2686</td>\n","      <td>Pharaoh.se</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-2502.5</td>\n","      <td>4. Dynastie</td>\n","      <td>-2613</td>\n","      <td>-2392</td>\n","      <td>Pharaoh.se</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-2434.0</td>\n","      <td>Altes Reich</td>\n","      <td>-2687</td>\n","      <td>-2181</td>\n","      <td>Pharaoh.se</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-2419.5</td>\n","      <td>5. Dynastie</td>\n","      <td>-2494</td>\n","      <td>-2345</td>\n","      <td>Pharaoh.se</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-2410.0</td>\n","      <td>Kakai Neferirkare I.</td>\n","      <td>-2415</td>\n","      <td>-2405</td>\n","      <td>AE Chronology</td>\n","      <td>AE Chronology dates seem to correlate best wit...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>47.5</td>\n","      <td>Claudius</td>\n","      <td>41</td>\n","      <td>54</td>\n","      <td>Pharaoh.se</td>\n","      <td>All sources cited by Pharaoh.se agree</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>61.0</td>\n","      <td>Nero</td>\n","      <td>54</td>\n","      <td>68</td>\n","      <td>Pharaoh.se</td>\n","      <td>All sources cited by Pharaoh.se agree</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>107.5</td>\n","      <td>Trajan</td>\n","      <td>98</td>\n","      <td>117</td>\n","      <td>Pharaoh.se</td>\n","      <td>All sources cited by Pharaoh.se agree</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>127.5</td>\n","      <td>Hadrian</td>\n","      <td>117</td>\n","      <td>138</td>\n","      <td>Pharaoh.se</td>\n","      <td>All sources cited by Pharaoh.se agree</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>149.5</td>\n","      <td>Antoninus Pius</td>\n","      <td>138</td>\n","      <td>161</td>\n","      <td>Pharaoh.se</td>\n","      <td>All sources cited by Pharaoh.se agree</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>93 rows Ã— 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3eb6b3f7-884d-4cd5-aa3e-aeb7700b9b10')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3eb6b3f7-884d-4cd5-aa3e-aeb7700b9b10 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3eb6b3f7-884d-4cd5-aa3e-aeb7700b9b10');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-58dc762d-fd9d-4005-b679-806d30ddac95\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-58dc762d-fd9d-4005-b679-806d30ddac95')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-58dc762d-fd9d-4005-b679-806d30ddac95 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f2c503f1-f6ea-4064-8999-da9f2b34bc9e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_dates')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f2c503f1-f6ea-4064-8999-da9f2b34bc9e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_dates');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_dates","summary":"{\n  \"name\": \"df_dates\",\n  \"rows\": 93,\n  \"fields\": [\n    {\n      \"column\": \"Centroid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 732.5174067742071,\n        \"min\": -2783.0,\n        \"max\": 149.5,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          -167.5,\n          -2783.0,\n          -1028.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Epoch\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"Amenhotep II. Aacheperure\",\n          \"Sesostris I. Cheperkare\",\n          \"Sethnacht Userchaure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Start Date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 742,\n        \"min\": -2880,\n        \"max\": 138,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          -2415,\n          -1353,\n          -2216\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"End Date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 727,\n        \"min\": -2686,\n        \"max\": 313,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          -1292,\n          -2686,\n          -1728\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Source\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Pharaoh.se\",\n          \"AE Chronology\",\n          \"AE Chronology, Pharaoh.se\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Comment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Entire 11th Dynasty used due to ambiguity in source\",\n          \"All sources cited by Pharaoh.se agree\",\n          \"Start of reign unknown, taken from end of Amenhotep IV\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["## Load Sign Data File\n","\n","You will be prompted to input the Gardiner sign code for the sign you would like to add dates to.\n","An incorrect code or a code whose data are not available will result in an error."],"metadata":{"id":"gxUrvM5bki-D"}},{"cell_type":"code","source":["data_directory = 'https://raw.githubusercontent.com/Writing-Through-Time/Evolution/refs/heads/main/data/aku_pal/'\n","sign_code = input('Please enter the Gardiner sign code for the sign you would like to add numerical dates to: ')\n","url = data_directory + sign_code + '.csv'\n","\n","try:\n","  df_sign = pd.read_csv(url)\n","  print(f\"Data for sign {sign_code} loaded successfully.\")\n","  print(df_sign)\n","\n","except Exception as e:\n","  print(f\"An error occurred: {e}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aIncW58smAOY","executionInfo":{"status":"ok","timestamp":1734620636317,"user_tz":-60,"elapsed":11255,"user":{"displayName":"Christian Casey","userId":"11169040297014525246"}},"outputId":"7213be53-9dfa-4bbb-e7fd-8cc31fb73cf8"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Please enter the Gardiner sign code for the sign you would like to add numerical dates to: G17\n","Data for sign G17 loaded successfully.\n","      ht_id      gr_no  formclass_id               dating_from  \\\n","0        53  G0280.100          1084  Amenhotep III. Nebmaatre   \n","1      1504  G0280.050          1083   Amenhotep I. Djeserkare   \n","2      1505  G0280.100          1084   Amenhotep I. Djeserkare   \n","3      2072  G0280.050          1083              17. Dynastie   \n","4      2073  G0280.050          1083              17. Dynastie   \n","...     ...        ...           ...                       ...   \n","1128  52047  G0280.050          1083  Amenhotep III. Nebmaatre   \n","1129  52066  G0280.050          1083              19. Dynastie   \n","1130  52067  G0280.050          1083              19. Dynastie   \n","1131  52140  G0280.050          1083              19. Dynastie   \n","1132  52174  G0280.050          1083              19. Dynastie   \n","\n","                     dating_to  \n","0     Amenhotep III. Nebmaatre  \n","1      Amenhotep I. Djeserkare  \n","2      Amenhotep I. Djeserkare  \n","3                 17. Dynastie  \n","4                 17. Dynastie  \n","...                        ...  \n","1128  Amenhotep III. Nebmaatre  \n","1129              20. Dynastie  \n","1130              20. Dynastie  \n","1131              20. Dynastie  \n","1132              20. Dynastie  \n","\n","[1133 rows x 5 columns]\n"]}]},{"cell_type":"markdown","source":["## Find matching epochs in date file\n","\n","The following loops through each unique date given in the sign's data and finds it in the dates file. It then assigns numerical values to the relevant dates and saves the results.\n","\n","When a date can't be found, it fails with an error message. This should not happen, as both datasets are drawn from the same source."],"metadata":{"id":"AaH0amqSmXw9"}},{"cell_type":"code","source":["missing_epochs = []\n","\n","for index, row in df_sign.iterrows():\n","  start_date_epoch = row['dating_from']\n","  end_date_epoch = row['dating_to']\n","\n","  # We want the entire date range\n","  # so get the start date of the first epoch (\"dating_from\")\n","  # and the end date of the second epoch (\"dating_to\")\n","  start_date = df_dates[df_dates['Epoch'] == start_date_epoch]['Start Date']\n","  end_date = df_dates[df_dates['Epoch'] == end_date_epoch]['End Date']\n","\n","  if start_date.empty:\n","    missing_epochs.append(start_date_epoch)\n","  if end_date.empty:\n","    missing_epochs.append(end_date_epoch)\n","\n","  start_date = start_date.iloc[0]\n","  end_date = end_date.iloc[0]\n","  df_sign.loc[index, 'start_date'] = start_date\n","  df_sign.loc[index, 'end_date'] = end_date\n","  df_sign.loc[index, 'centroid'] = (start_date + end_date) / 2;\n","\n","# Alert the user to the problem if dates are missing\n","if len(missing_epochs):\n","\n","  print('\\nERROR\\n\\nSome epochs are missing. They must be filled in before continuing.')\n","  print('Here follows a list of the missing epochs:')\n","  unique_list = []\n","  for item in missing_epochs:\n","      if item not in unique_list:\n","          unique_list.append(item)\n","          print(item)\n","\n","else:\n","  print('All dates found and converted.')\n","  df_sign = df_sign.sort_values(by=['centroid', 'formclass_id', 'ht_id'])\n","  display(df_sign)\n","  df_sign.to_csv(sign_code + '_dated.csv', index=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":511},"id":"LDSqFJdGmW-7","executionInfo":{"status":"ok","timestamp":1734620755953,"user_tz":-60,"elapsed":2486,"user":{"displayName":"Christian Casey","userId":"11169040297014525246"}},"outputId":"5cb80f67-4586-4fb8-cb48-632c8b3badb8"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["All dates found and converted.\n"]},{"output_type":"display_data","data":{"text/plain":["     ht_id      gr_no  formclass_id           dating_from  \\\n","824  37514  G0280.050          1083           4. Dynastie   \n","951  45807  G0280.050          1083           4. Dynastie   \n","952  45851  G0280.050          1083           4. Dynastie   \n","166   9630  G0280.050          1083  Kakai Neferirkare I.   \n","167   9648  G0280.050          1083  Kakai Neferirkare I.   \n","..     ...        ...           ...                   ...   \n","204  10630  G0280.100          1084               Hadrian   \n","205  10631  G0280.100          1084               Hadrian   \n","206  10632  G0280.100          1084               Hadrian   \n","190  10078  G0280.100          1084                Trajan   \n","191  10079  G0280.100          1084                Trajan   \n","\n","                dating_to  start_date  end_date  centroid  \n","824           4. Dynastie     -2613.0   -2392.0   -2502.5  \n","951           4. Dynastie     -2613.0   -2392.0   -2502.5  \n","952           4. Dynastie     -2613.0   -2392.0   -2502.5  \n","166  Kakai Neferirkare I.     -2415.0   -2405.0   -2410.0  \n","167  Kakai Neferirkare I.     -2415.0   -2405.0   -2410.0  \n","..                    ...         ...       ...       ...  \n","204               Hadrian       117.0     138.0     127.5  \n","205               Hadrian       117.0     138.0     127.5  \n","206               Hadrian       117.0     138.0     127.5  \n","190        Antoninus Pius        98.0     161.0     129.5  \n","191        Antoninus Pius        98.0     161.0     129.5  \n","\n","[1133 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-e4b33c31-0523-4fc5-9e9d-0f3676bcfbee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ht_id</th>\n","      <th>gr_no</th>\n","      <th>formclass_id</th>\n","      <th>dating_from</th>\n","      <th>dating_to</th>\n","      <th>start_date</th>\n","      <th>end_date</th>\n","      <th>centroid</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>824</th>\n","      <td>37514</td>\n","      <td>G0280.050</td>\n","      <td>1083</td>\n","      <td>4. Dynastie</td>\n","      <td>4. Dynastie</td>\n","      <td>-2613.0</td>\n","      <td>-2392.0</td>\n","      <td>-2502.5</td>\n","    </tr>\n","    <tr>\n","      <th>951</th>\n","      <td>45807</td>\n","      <td>G0280.050</td>\n","      <td>1083</td>\n","      <td>4. Dynastie</td>\n","      <td>4. Dynastie</td>\n","      <td>-2613.0</td>\n","      <td>-2392.0</td>\n","      <td>-2502.5</td>\n","    </tr>\n","    <tr>\n","      <th>952</th>\n","      <td>45851</td>\n","      <td>G0280.050</td>\n","      <td>1083</td>\n","      <td>4. Dynastie</td>\n","      <td>4. Dynastie</td>\n","      <td>-2613.0</td>\n","      <td>-2392.0</td>\n","      <td>-2502.5</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>9630</td>\n","      <td>G0280.050</td>\n","      <td>1083</td>\n","      <td>Kakai Neferirkare I.</td>\n","      <td>Kakai Neferirkare I.</td>\n","      <td>-2415.0</td>\n","      <td>-2405.0</td>\n","      <td>-2410.0</td>\n","    </tr>\n","    <tr>\n","      <th>167</th>\n","      <td>9648</td>\n","      <td>G0280.050</td>\n","      <td>1083</td>\n","      <td>Kakai Neferirkare I.</td>\n","      <td>Kakai Neferirkare I.</td>\n","      <td>-2415.0</td>\n","      <td>-2405.0</td>\n","      <td>-2410.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>204</th>\n","      <td>10630</td>\n","      <td>G0280.100</td>\n","      <td>1084</td>\n","      <td>Hadrian</td>\n","      <td>Hadrian</td>\n","      <td>117.0</td>\n","      <td>138.0</td>\n","      <td>127.5</td>\n","    </tr>\n","    <tr>\n","      <th>205</th>\n","      <td>10631</td>\n","      <td>G0280.100</td>\n","      <td>1084</td>\n","      <td>Hadrian</td>\n","      <td>Hadrian</td>\n","      <td>117.0</td>\n","      <td>138.0</td>\n","      <td>127.5</td>\n","    </tr>\n","    <tr>\n","      <th>206</th>\n","      <td>10632</td>\n","      <td>G0280.100</td>\n","      <td>1084</td>\n","      <td>Hadrian</td>\n","      <td>Hadrian</td>\n","      <td>117.0</td>\n","      <td>138.0</td>\n","      <td>127.5</td>\n","    </tr>\n","    <tr>\n","      <th>190</th>\n","      <td>10078</td>\n","      <td>G0280.100</td>\n","      <td>1084</td>\n","      <td>Trajan</td>\n","      <td>Antoninus Pius</td>\n","      <td>98.0</td>\n","      <td>161.0</td>\n","      <td>129.5</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>10079</td>\n","      <td>G0280.100</td>\n","      <td>1084</td>\n","      <td>Trajan</td>\n","      <td>Antoninus Pius</td>\n","      <td>98.0</td>\n","      <td>161.0</td>\n","      <td>129.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1133 rows Ã— 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4b33c31-0523-4fc5-9e9d-0f3676bcfbee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4b33c31-0523-4fc5-9e9d-0f3676bcfbee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4b33c31-0523-4fc5-9e9d-0f3676bcfbee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aec3c2d6-4985-4765-acca-76ee7c747a82\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aec3c2d6-4985-4765-acca-76ee7c747a82')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aec3c2d6-4985-4765-acca-76ee7c747a82 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4d07d7a4-8d66-4b77-a939-a2329a134247\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_sign')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4d07d7a4-8d66-4b77-a939-a2329a134247 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_sign');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_sign","summary":"{\n  \"name\": \"df_sign\",\n  \"rows\": 1133,\n  \"fields\": [\n    {\n      \"column\": \"ht_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14907,\n        \"min\": 53,\n        \"max\": 52174,\n        \"num_unique_values\": 1133,\n        \"samples\": [\n          47730,\n          32117,\n          43566\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gr_no\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"G0280.025\",\n          \"G0280.150\",\n          \"G0280.075\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"formclass_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 1083,\n        \"max\": 1229,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1228,\n          1085,\n          1229\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dating_from\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"4. Dynastie\",\n          \"Nehri I. (Nomarch)\",\n          \"Sethos II. Usercheperure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dating_to\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"4. Dynastie\",\n          \"Nehri I. (Nomarch)\",\n          \"Tausret Satre-Meritamun\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"start_date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 412.8698836966833,\n        \"min\": -2613.0,\n        \"max\": 117.0,\n        \"num_unique_values\": 54,\n        \"samples\": [\n          -1479.0,\n          -27.0,\n          -180.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"end_date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 406.4345701312569,\n        \"min\": -2405.0,\n        \"max\": 161.0,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          -2392.0,\n          -2040.0,\n          -1198.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"centroid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 406.84193765498884,\n        \"min\": -2502.5,\n        \"max\": 129.5,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          -2263.0,\n          -835.5,\n          -1727.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"yljzS8o2H0bA"}}]}